{
    "byol-a":  {    "install_cmd": ["cd ./byol-a",
                                    "pip install -r requirements.txt",
                                    "curl -O https://raw.githubusercontent.com/lucidrains/byol-pytorch/2aa84ee18fafecaf35637da4657f92619e83876d/byol_pytorch/byol_pytorch.py",
                                    "patch < byol_a/byol_pytorch.diff",
                                    "mv byol_pytorch.py byol_a",
                                    "curl -O https://raw.githubusercontent.com/daisukelab/general-learning/7b31d31637d73e1a74aec3930793bd5175b64126/MLP/torch_mlp_clf.py",
                                    "mv torch_mlp_clf.py utils",
                                    "cd ../"],
                    "import": ["cd ./byol-a",
                               "from byol_a.common import *",
                               "from byol_a.augmentations import PrecomputedNorm",
                               "from byol_a.models import AudioNTT2020Task6X",
                               "cd ../"],
                    "model_init": ["cfg = load_yaml_config('config.yaml')",
                                   "model = AudioNTT2020Task6X(d=cfg.feature_d, n_mels=cfg.n_mels)",
                                   "model.load_weight('pretrained_weights/AudioNTT2020-BYOLA-64x96d2048.pth')"],
                    "sample_rate": 16000,
                    "in_shape": 2,
                    "in_pre": ["cfg = load_yaml_config('config.yaml')",
                               "stats = [-5.4919195,  5.0389895]",
                               "to_melspec = torchaudio.transforms.MelSpectrogram(sample_rate=cfg.sample_rate, n_fft=cfg.n_fft, win_length=cfg.win_length, hop_length=cfg.hop_length, n_mels=cfg.n_mels, f_min=cfg.f_min, f_max=cfg.f_max)",
                               "normalizer = PrecomputedNorm(stats)",
                               "x = = normalizer((to_melspec(x) + torch.finfo(torch.float).eps).log())"],
                    "embed_fwd": ["y = model(x)"]
                }
}